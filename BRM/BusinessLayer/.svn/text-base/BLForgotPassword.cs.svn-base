using System;
using System.Collections.Generic;
using System.Linq;
using System.Security.Policy;
using System.Text;
using System.Threading.Tasks;
using WebMatrix.WebData;
using DatabaseLayer;
using System.Net.Mail;
using EntityLayer;
using System.Net;

namespace BusinessLayer
{
    public class BLForgotPassword
    {
        public BRMContext db = new BRMContext();

        public string GetEmail(string username)
        {
            var emailid = (from i in db.UserContext
                           where i.Username == username
                           select i.Email).FirstOrDefault();
            return emailid;
        }

        public void AddToken(string token, string username)
        {
            UserDetails user = new UserDetails();

            user = (from p in db.UserContext where p.Username == username select p).SingleOrDefault();
            user.Token = token;
            db.SaveChanges();
            
        }

        public void SendEMail(string emailid, string subject, string body)
        {


            string senderID = "aarth.996@gmail.com";
            string ID = "";

            SmtpClient smtp = new SmtpClient
            {
                Host = "smtp.gmail.com",
                Port = 587,
                EnableSsl = true,
                DeliveryMethod = SmtpDeliveryMethod.Network,
                UseDefaultCredentials = false,
                Credentials = new NetworkCredential(senderID, ID),
                Timeout = 20000
            };

            MailMessage message = new MailMessage(senderID, emailid, subject, body);
            smtp.Send(message);
        }

        public bool CheckToken(string username, string token)
        {
            return  (from j in db.UserContext
                              where (j.Username == username)
                              && (j.Token == token)
                              //&& (j.PasswordVerificationTokenExpirationDate < DateTime.Now)
                              select j).Any(); 
        }

        public bool CheckUser(string username)
        {
            bool user = (from j in db.UserContext
                         where (j.Username == username)
                         select j).Any();
            return user;
        }

        public bool ResetPassword(string username, string newpassword)
        {
            UserDetails user = new UserDetails();

            user = (from p in db.UserContext where p.Username == username select p).SingleOrDefault();
            user.Password = newpassword;
            db.SaveChanges();
            return true;
        }
    }
}
